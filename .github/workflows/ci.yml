name: CI

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    name: Build and Test (${{ matrix.os }})
    environment: ci
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: swatinem/rust-cache@v2
      - name: Build
        run: |
          cargo build --verbose

      - name: Run tests (without coverage)
        if: matrix.os != 'ubuntu-latest'
        run: |
          cargo test --verbose

      - name: Install cargo-tarpaulin (for coverage)
        uses: taiki-e/install-action@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          tool: cargo-tarpaulin

      - name: Run tests (with coverage)
        if: matrix.os == 'ubuntu-latest'
        run: |
          rustup toolchain install --profile minimal nightly
          cargo tarpaulin --verbose --out Xml --engine llvm --skip-clean --tests --doc

      - name: Upload coverage reports to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  semantic-release:
    name: Semantic Release
    environment: ci
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs: build-test
    outputs:
      created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: rust

  publish:
    name: Publish to crates.io
    environment: ci
    runs-on: ubuntu-latest
    needs: semantic-release
    if: needs.semantic-release.outputs.created
    steps:
      - uses: actions/checkout@v4

      - uses: swatinem/rust-cache@v2

      - name: Publish
        run: |
          cargo publish --verbose --no-verify --token ${{ secrets.CARGO_API_TOKEN }}
